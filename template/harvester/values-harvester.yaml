cloudprovider: harvester
cloudCredentialSecretName: cc-4b6x2    #harvester-creds
rancher:
  cattle:
    url: rancher.yorko.io
cluster:
  name: rke2-cluster-harvester
  cluster:
  annotations: {}
  labels: {}
  name: dev-harvester
  config:
    kubernetesVersion: v1.31.4+rke2r1
    enableNetworkPolicy: true
    localClusterAuthEndpoint:
      enabled: false
    globalConfig:
      systemDefaultRegistry: docker.io #rgcrprod.azurecr.us
      cni: canal
      docker: false
      disable_kube_proxy: false
      etcd_expose_metrics: false
      profile: '' #cis-1.23
      selinux: false
      secrets_encryption: true
      tls-san: something.yorko.io
      write_kubeconfig_mode: 0640
      use_service_account_credentials: true
      protect_kernel_defaults: true
      cloud_provider_name: ''
      kube_controller_manager_arg:
        - bind-address=127.0.0.1
        - use-service-account-credentials=true
        - tls-min-version=VersionTLS12
        - tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      kube_scheduler_arg:
        - tls-min-version=VersionTLS12
        - tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      kube_apiserver_arg:
        - tls-min-version=VersionTLS12
        - tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - authorization-mode=RBAC,Node
        - anonymous-auth=false
        - audit-policy-file=/etc/rancher/rke2/audit-policy.yaml
        - audit-log-mode=blocking-strict
        - audit-log-maxage=30
        - admission-control-config-file=/etc/rancher/rke2/rancher-pss.yaml
      kubelet_arg:
        - protect-kernel-defaults=true
        - read-only-port=0
        - authorization-mode=Webhook
        - streaming-connection-idle-timeout=5m
    registries:
      enabled: false
#      configs:
#        - name: rgcrprod.azurecr.us
#          authConfigSecretName: carbidecredential
#          caBundle: ''
#          insecureSkipVerify: true
#          tlsSecretName: ''
#      mirrors:
#        - name: docker.io
#          endpoints:
#            - rgcrprod.azurecr.us
    upgradeStrategy:
      controlPlaneConcurrency: 10%
      controlPlaneDrainOptions:
        enabled: false
      workerConcurrency: 10%
      workerDrainOptions:
        enabled: false

# node and nodepool(s) values
nodepools:
  - name: control-plane-nodes
    # displayName: cp-nodes
    quantity: 1
    etcd: true
    controlplane: true
    worker: false
    paused: false
    cpuCount: 4 # required (example: 4)
    # diskBus: virtio
    # diskInfo: ''
    diskSize: 100 # required (example: 64)
    imageName: default/image-nkpkq # required (example: default/image-abcdefg)
    # keyPairName: ''
    memorySize: 8 # required (example: 8)
    # networkInfo: ''
    # networkModel: virtio
    networkName: default/vlan1 # required (example: default/default)
    # networkType: ''
    # sshPassword: ''
    # sshPort: 22
    # sshPrivateKeyPath: ''
    sshUser: kdlocapanda # required (example: rocky)
    # vmAffinity: ''
    # vmNamespace: default
    # networkData: |
      #cloud-config
    userData: |
      #cloud-config
      packages:
      - iptables
      - container-selinux
      - libnetfilter_conntrack
      - libnfnetlink
      - libnftnl
      - policycoreutils-python-utils
      - cryptsetup
      - nfs-utils
      - iscsi-initiator-utils
      - zip
      - zstd
      - qemu-guest-agent
      ssh_authorized_keys:
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICd1AJYfBsqACtsI5e93SS3Uw35VqMhxbpWJrcqqYW76 joshua.yorko@gmail.com
      write_files:
      - path: /etc/sysctl.conf
        owner: root
        content: |
          vm.swappiness=0
          vm.panic_on_oom=0
          vm.overcommit_memory=1
          kernel.panic=10
          kernel.panic_on_oops=1
          vm.max_map_count = 262144
          net.ipv4.ip_local_port_range=1024 65000
          net.core.somaxconn=10000
          net.ipv4.tcp_tw_reuse=1
          net.ipv4.tcp_fin_timeout=15
          net.core.somaxconn=4096
          net.core.netdev_max_backlog=4096
          net.core.rmem_max=16777216
          net.core.wmem_max=16777216
          net.ipv4.tcp_max_syn_backlog=20480
          net.ipv4.tcp_max_tw_buckets=400000
          net.ipv4.tcp_no_metrics_save=1
          net.ipv4.tcp_rmem=4096 87380 16777216
          net.ipv4.tcp_syn_retries=2
          net.ipv4.tcp_synack_retries=2
          net.ipv4.tcp_wmem=4096 65536 16777216
          net.ipv4.neigh.default.gc_thresh1=8096
          net.ipv4.neigh.default.gc_thresh2=12288
          net.ipv4.neigh.default.gc_thresh3=16384
          net.ipv4.tcp_keepalive_time=600
          net.ipv4.ip_forward=1
          net.ipv6.conf.all.disable_ipv6 = 1
          net.ipv6.conf.default.disable_ipv6 = 1
          fs.inotify.max_user_instances=8192
          fs.inotify.max_user_watches=1048576
      - path: /etc/rancher/rke2/audit-policy.yaml
        owner: root
        content: |
          apiVersion: audit.k8s.io/v1
          kind: Policy
          metadata:
            name: rke2-audit-policy
          rules:
            - level: Metadata
              resources:
              - group: ""
                resources: ["secrets"]
            - level: RequestResponse
              resources:
              - group: ""
                resources: ["*"]
      - path: /etc/rancher/rke2/rancher-pss.yaml
        owner: root
        content: |
          apiVersion: apiserver.config.k8s.io/v1
          kind: AdmissionConfiguration
          plugins:
            - name: PodSecurity
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1
                kind: PodSecurityConfiguration
                defaults:
                  enforce: "restricted"
                  enforce-version: "latest"
                  audit: "restricted"
                  audit-version: "latest"
                  warn: "restricted"
                  warn-version: "latest"
                exemptions:
                  usernames: []
                  runtimeClasses: []
                  namespaces: [calico-apiserver,
                              calico-system,
                              carbide-docs-system,
                              carbide-stigatron-system,
                              cattle-alerting,
                              cattle-csp-adapter-system,
                              cattle-elemental-system,
                              cattle-epinio-system,
                              cattle-externalip-system,
                              cattle-fleet-local-system,
                              cattle-fleet-system,
                              cattle-gatekeeper-system,
                              cattle-global-data,
                              cattle-global-nt,
                              cattle-impersonation-system,
                              cattle-istio,
                              cattle-istio-system,
                              cattle-logging,
                              cattle-logging-system,
                              cattle-monitoring-system,
                              cattle-neuvector-system,
                              cattle-prometheus,
                              cattle-provisioning-capi-system,
                              cattle-resources-system,
                              cattle-sriov-system,
                              cattle-system,
                              cattle-ui-plugin-system,
                              cattle-windows-gmsa-system,
                              cert-manager,
                              cis-operator-system,
                              fleet-default,
                              fleet-local,
                              ingress-nginx,
                              istio-system,
                              kube-node-lease,
                              kube-public,
                              kube-system,
                              longhorn-system,
                              rancher-alerting-drivers,
                              security-scan,
                              tigera-operator,
                              neuvector,
                              flask,
                              ghost,
                              kubecon,
                              minio,
                              whoami,
                              harbor,
                              gitea,
                              tailscale,
                              gitness,
                              stackrox,
                              keycloak,
                              versions]
      runcmd:
      - sudo sysctl -p
      - sudo echo -e "[keyfile]\nunmanaged-devices=interface-name:cali*;interface-name:flannel*" > /etc/NetworkManager/conf.d/rke2-canal.conf
      - sudo mkdir -p /etc/rancher/rke2/ /var/lib/rancher/rke2/server/manifests/
      - sudo useradd -r -c "etcd user" -s /sbin/nologin -M etcd -U
      - sudo systemctl disable --now firewalld; systemctl disable --now nm-cloud-setup; systemctl disable --now nm-cloud-setup.timer
      - sudo systemctl restart qemu-guest-agent

  - name: worker-nodes
    # displayName: wk-nodes
    quantity: 3
    etcd: false
    controlplane: false
    worker: true
    # labels:
      # key: value
    # taints:
      # effect: value
      # key: value
      # value: value
    paused: false
    # drainBeforeDelete: true
    # drainBeforeDeleteTimeout: 30s
    # unhealthyNodeTimeout: 60s
    # machineDeploymentLabels:
      # key: value
    # machineDeploymentAnnotations:
      # key: value
    # rollingUpdate:
      # maxUnavailable: 1
      # maxSurge: 1
    # clusterId: # only needed if not using cloudCredentialSecretName
    # clusterType: # only needed if not using cloudCredentialSecretName
    # kubeconfigContent: # only needed if not using cloudCredentialSecretName
    cpuCount: 4 # required (example: 4)
    # diskBus: virtio
    # diskInfo: ''
    diskSize: 150  # required (example: 64)
    imageName: default/image-nkpkq # required (example: default/image-xyz)
    # keyPairName: ''
    memorySize: 8 # required (example: 8)
    # networkInfo: ''
    # networkModel: virtio
    networkName: default/vlan1 # required (example: default/default)
    # networkType: ''
    # sshPassword: ''
    # sshPort: 22
    # sshPrivateKeyPath: ''
    sshUser: kdlocpanda # required (example: rocky)
    # vmAffinity: ''
    # vmNamespace: default
    # networkData: |
      #cloud-config
    userData: |
      #cloud-config
      package_update: true
      packages: ['qemu-guest-agent']
      runcmd:
      - systemctl enable --now qemu-guest-agent.service

# addons values
addons:
  monitoring:
    enabled: false
    # version: 103.0.4+up45.31.1
    # values:
      # values here

  longhorn:
    enabled: true
    # version: 103.2.2+up1.5.4
    # values:
      # values here

  neuvector:
    enabled: false
    # version: 103.0.2+up2.7.3
    # values:
      # values here